{
  "version": 3,
  "sources": ["../../vuetify/src/components/VImg/VImg.tsx", "../../vuetify/src/components/VResponsive/VResponsive.tsx", "../../vuetify/src/components/VAvatar/VAvatar.tsx"],
  "sourcesContent": ["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  defineComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: {\n    loadstart: (event: string | undefined) => true,\n    load: (event: string | undefined) => true,\n    error: (event: string | undefined) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt=\"\"\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt=\"\"\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n      >{{\n        additional: () => (\n          <>\n            <__image />\n            <__preloadImage />\n            <__gradient />\n            <__placeholder />\n            <__error />\n          </>\n        ),\n        default: slots.default,\n      }}</VResponsive>\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n", "// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport const VResponsive = defineComponent({\n  name: 'VResponsive',\n\n  props: {\n    aspectRatio: [String, Number],\n    contentClass: String,\n\n    ...makeDimensionProps(),\n  },\n\n  setup (props, { slots }) {\n    const { aspectStyles } = useAspectStyles(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div class=\"v-responsive\" style={ dimensionStyles.value }>\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n\n        { slots.additional?.() }\n\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VResponsive = InstanceType<typeof VResponsive>\n", "// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { defineComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'VAvatar')\n\nexport const VAvatar = defineComponent({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n        ]}\n      >\n        { props.image\n          ? (<VImg key=\"image\" src={ props.image } alt=\"\" />)\n          : props.icon\n            ? (<VIcon key=\"icon\" icon={ props.icon } />)\n            : slots.default?.()\n        }\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"],
  "mappings": "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",
  "names": ["useAspectStyles", "props", "aspectStyles", "computed", "ratio", "Number", "aspectRatio", "paddingBottom", "String", "undefined", "VResponsive", "defineComponent", "name", "contentClass", "makeDimensionProps", "setup", "slots", "dimensionStyles", "useDimension", "useRender", "value", "additional", "default", "VImg", "defineComponent", "name", "directives", "intersect", "props", "aspectRatio", "String", "Number", "alt", "cover", "Boolean", "eager", "gradient", "lazySrc", "options", "type", "Object", "default", "root", "undefined", "rootMargin", "threshold", "sizes", "src", "srcset", "width", "makeTransitionProps", "emits", "loadstart", "event", "load", "error", "setup", "emit", "slots", "currentSrc", "ref", "image", "state", "naturalWidth", "naturalHeight", "normalisedSrc", "computed", "aspect", "value", "watch", "init", "onBeforeMount", "isIntersecting", "SUPPORTS_INTERSECTION", "lazyImg", "Image", "pollForSize", "nextTick", "complete", "onError", "onLoad", "getSrc", "img", "timeout", "poll", "imgHeight", "imgWidth", "setTimeout", "endsWith", "startsWith", "containClasses", "__image", "sources", "transition", "withDirectives", "vShow", "__preloadImage", "__placeholder", "placeholder", "__error", "__gradient", "backgroundImage", "isBooted", "stop", "val", "requestAnimationFrame", "useRender", "convertToUnit", "additional", "handler", "makeVAvatarProps", "propsFactory", "start", "Boolean", "end", "icon", "IconValue", "image", "String", "makeDensityProps", "makeRoundedProps", "makeSizeProps", "makeTagProps", "makeVariantProps", "variant", "VAvatar", "defineComponent", "name", "props", "setup", "slots", "colorClasses", "colorStyles", "variantClasses", "useVariant", "densityClasses", "useDensity", "roundedClasses", "useRounded", "sizeClasses", "sizeStyles", "useSize", "useRender", "value", "default", "genOverlays"]
}
